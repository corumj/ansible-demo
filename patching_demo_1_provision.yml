--- 
- name: Setup patching demo 
  hosts: localhost
  connection: local 

  tasks:
    - name: Find AWS User information
      amazon.aws.aws_caller_info:
        region: "{{ aws_region }}"
        aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
      register: user

    - name: Spin up HA Proxy server 
      awx.awx.job_launch:
        job_template: 2. Provision
        extra_vars:
          survey_group_name: "loadbalancer"
          survey_short_desc: "haproxy"
          survey_server_env: "dev" 
          survey_server_os: "linux"
          survey_business_domain_name: "Red Hat"
        controller_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
        controller_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
        controller_host: "{{ lookup('env', 'TOWER_HOST') }}"
        validate_certs: true
      register: ha_proxy 

    - name: Spin up app1 server 
      awx.awx.job_launch:
        job_template: 2. Provision
        extra_vars:
          survey_group_name: "application"
          survey_short_desc: "app1"
          survey_server_env: "dev" 
          survey_server_os: "linux"
          survey_business_domain_name: "Red Hat"
        controller_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
        controller_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
        controller_host: "{{ lookup('env', 'TOWER_HOST') }}"
        validate_certs: true
      register: app1

    - name: spin up app2 server 
      awx.awx.job_launch:
        job_template: 2. Provision
        extra_vars:
          survey_group_name: "application"
          survey_short_desc: "app2"
          survey_server_env: "dev" 
          survey_server_os: "linux"
          survey_business_domain_name: "Red Hat"
        controller_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
        controller_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
        controller_host: "{{ lookup('env', 'TOWER_HOST') }}"
        validate_certs: true
      register: app2

    - name: Wait for HA Proxy server to provision
      awx.awx.job_wait:
        job_id: "{{ ha_proxy.id }}"
        timeout: 1600

    - name: Wait for app1 server to provision
      awx.awx.job_wait:
        job_id: "{{ app1.id }}"
        timeout: 1600

    - name: Wait for app2 server to provision
      awx.awx.job_wait:
        job_id: "{{ app2.id }}"
        timeout: 1600

    - name: Update AWS Inventory Source
      awx.awx.inventory_source_update:
        name: AWS
        inventory: AWS
        organization: Default
        controller_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
        controller_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
        controller_host: "{{ lookup('env', 'TOWER_HOST') }}"
        validate_certs: true
        wait: yes

    # - name: Install the app we want to safely shut down 
    # - name: setup patching workflow 
