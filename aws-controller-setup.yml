---
- name: Setup Controller infrastructure 
  hosts: localhost
  connection: local 
  gather_facts: no
  vars:
    server_env: "test" 
    server_os: "linux"
    business_domain_name: "Red Hat"
    aws_instance_type: m4.xlarge

  tasks:

  - name: Setup AWS
    include_role:
      name: aws-infra-setup 
      
  - name: Get AWS infra info 
    include_role:
      name: aws-infra-info
    
  - name: call role to create all RHEL 8 servers for AAP
    include_role:
      name: aws-aap-infra 

  - meta: refresh_inventory

  # - name: print hostvars
  #   debug:
  #     msg: 
  #       - "Controller Public DNS: {{ hostvars[groups['demo_controller'][0]]['public_dns_name'] }}"
  #       - "Controller Private DNS: {{ hostvars[groups['demo_controller'][0]]['private_dns_name'] }}"
  #       - "Execution Node 1 Private DNS: {{ hostvars[groups['demo_execution'][0]]['private_dns_name'] }}"
  #       - "Services Catalog Public DNS: {{ hostvars[groups['demo_catalog'][0]]['public_dns_name'] }}"
  #       - "SSO Public DNS: {{ hostvars[groups['demo_catalog'][0]]['public_dns_name'] }}"

- name: Register to RHSM
  hosts: aws_ec2
  gather_facts: no
  become: yes 

  tasks:
    - name: Subscribe to Ansible by Pool ID 
      redhat_subscription:
        state: present
        username: "{{ redhat_username }}"
        password: "{{ redhat_password }}"
        pool_ids: "{{ aap_pool_id }}"
      async: 1400
      poll: 30

# - name: Exchange Keys between servers
#   hosts: aws_ec2
#   become: yes 
#   become_user: ansiblesa 

#   tasks:
#     - name: SSH KeyGen command
#       shell: ssh-keygen -q -b 2048 -t rsa -N "" -C "Ansible" -f ~/.ssh/id_rsa
#       args:
#         creates: "~/.ssh/id_rsa"

#     - name: Fetch the keyfile from the node to master
#       fetch: 
#         src: "~/.ssh/id_rsa.pub"
#         dest: "buffer/{{ inventory_hostname }}-id_rsa.pub"
#         flat: yes

#     - name: Copy the key add to authorized_keys using Ansible module
#       authorized_key:
#         user: ansiblesa
#         state: present
#         key: "{{ lookup('file','{{ playbook_dir }}/buffer/{{ item }}-id_rsa.pub')}}"
#       when: item != inventory_hostname
#       with_items: 
#         - "{{ groups['aws_ec2'] }}" 

- name: Install Automation Controller 
  hosts: localhost 
  connection: local 
  gather_facts: no

  tasks:

    - name: Extract AAP tar.gz install
      unarchive:
        src: "aap.tar.gz"
        dest: "{{ playbook_dir }}"
        extra_opts: ['--strip-components=1', '--show-stored-names']
    ## This is a real PITA if on a mac.  You need to install gnu-tar, 
    ## I did `brew install gnu-tar`

# - name: Configure Automation Controller  
#   hosts: demo_controller 
#   become: yes
#   become_user: ansiblesa 

#   tasks:

#     - name: Add credentials
#       include_role:
#         name: controller-credentials

#     - name: Add Inventories 
#       include_role:
#         name: controller-inventory 

#     - name: Add Projects 
#       include_role:
#         name: controller-projects 

#     - name: Add Workflows 
#       include_role:
#         name: controller-workflows

#     - debug:
#         msg: "Access Tower here: https://ansible.{{ top_level_domain }}"
          
