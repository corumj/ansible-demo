---
# - name: Install packages
#   include_tasks: package-dependencies.yml

# - name: Download Ansible Tower
#   get_url:
#     url: '{{ tower_installer_url | default(default_tower_url) }}'
#     dest: /tmp/tower.tar.gz

# - name: Create directory for Ansible Tower
#   file: path=/tmp/tower_install state=directory

# - name: Extract Ansible Tower install
#   unarchive:
#     src: /tmp/tower.tar.gz
#     dest: /tmp/tower_install
#     remote_src: true
#     extra_opts: ['--strip-components=1', '--show-stored-names']

# - name: template inventory file for Ansible Tower Install
#   template:
#     src: tower_install.j2
#     dest: /tmp/tower_install/inventory

# - name: run the Ansible Tower installer
#   shell: ./setup.sh
#   args:
#     chdir: /tmp/tower_install
#   async: 1400
#   poll: 15

# - name: wait for Ansible Tower to be up
#   uri:
#     url: https://localhost/api/v2/ping/
#     method: GET
#     user: admin
#     password: "{{admin_password}}"
#     validate_certs: false
#   register: check2
#   until: check2.json is defined
#   retries: 10
#   delay: 30

# - name: Display /api/v2/ping results
#   debug:
#     msg: '{{ check2.json }}'

# - name: install ansible-tower-cli and requests
#   become: true
#   pip:
#     name:
#       - ansible-tower-cli
#       - "requests==2.6.0"
#     state: latest

# - name: Install venv
#   include_tasks: venv.yml

# - name: Load manifest into variable
#   local_action:
#     module: slurp
#     src: "{{ playbook_dir }}/files/manifest.zip"
#   register: manifest_file
#   become: false

# - name: Post manifest file
#   uri:
#     url: https://{{ansible_host}}/api/v2/config/
#     method: POST
#     user: admin
#     password: "{{ admin_password }}"
#     body: '{ "eula_accepted": true, "manifest": "{{ manifest_file.content }}" }'
#     body_format: json
#     validate_certs: false
#     force_basic_auth: true

# - name: Setup Route 53 for domain name 
#   community.aws.route53:
#     profile: "{{ aws_profile }}"
#     state: present 
#     zone: redhatgov.io
#     record: "ansible.{{ aws_user }}.adp.redhatgov.io"
#     type: A
#     value: "{{ tower_ip }}"
#     wait: yes
#     overwrite: yes
#   become: no
#   delegate_to: localhost

# - name: Configure Nginx with FQDN 
#   template:
#     src: nginx.conf.j2 
#     dest: /etc/nginx/nginx.conf 
#     validate: /usr/sbin/nginx -t -c %s 
#   register: nginx 

# - name: Restart nginx 
#   service:
#     name: nginx 
#     state: restarted 
#   when: nginx.changed 

# - name: Install certbot and requirements 
#   package:
#     name:
#       - certbot 
#       - python3-certbot-nginx 
#     state: present 

# - name: Use certbot to setup certificate 
#   shell: "certbot --nginx -d ansible.{{ aws_user }}.adp.redhatgov.io --non-interactive --agree-tos -m {{ aws_user }}@redhat.com"
#   args:
#     creates: /etc/letsencrypt/live/ansible.{{ aws_user }}.adp.redhatgov.io/fullchain.pem

- name: Setup Tower Credential 
  awx.awx.tower_credential:
    state: present
    name: Tower Credential
    description: Tower Credential to automate Tower itself 
    organization: Default 
    credential_type: Ansible Tower
    inputs:
      username: "admin"
      password: "{{ admin_password }}"
    tower_username: "admin"
    tower_password: "{{ admin_password }}"
    tower_host: "https://ansible.{{ aws_user }}.adp.redhatgov.io"
    tower_verify_ssl: true

- name: Create Ansible Demo Tower Project
  awx.awx.tower_project:
    name: Ansible Demo 
    state: present
    wait: yes
    organization: Default 
    tower_username: "admin"
    tower_password: "{{ admin_password }}"
    tower_host: "https://ansible.{{ aws_user }}.adp.redhatgov.io"
    tower_verify_ssl: true
    scm_type: git 
    scm_url: https://github.com/corumj/ansible-demo.git
    scm_update_on_launch: yes 
    
- name: Create Choose Your demo Template
  awx.awx.tower_job_template:
    name: "1. Select a Demo to stage"
    job_type: "run"
    inventory: Demo Inventory
    project: Ansible Demo
    playbook: "choose-demo.yml"
    credentials: 
      - "Tower Credential"
    survey_enabled: yes 
    survey_spec: "{{ lookup('file', 'choose-demo.json') }}"
    state: "present"
    tower_username: "admin"
    tower_password: "{{ admin_password }}"
    tower_host: "https://ansible.{{ aws_user }}.adp.redhatgov.io"
    tower_verify_ssl: true